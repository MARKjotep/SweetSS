import { RM } from "../media";
export declare class f {
    static attr(...sfs: RM[]): string;
    static blur(...sfs: RM[]): string;
    static brightness(...sfs: RM[]): string;
    static calc(...sfs: RM[]): string;
    static circle(...sfs: RM[]): string;
    static colorMix(...sfs: RM[]): string;
    static conicGradient(...sfs: RM[]): string;
    static contrast(...sfs: RM[]): string;
    static cubicBezier(...sfs: RM[]): string;
    static dropShadow(...sfs: RM[]): string;
    static env(...sfs: RM[]): string;
    static grayscale(...sfs: RM[]): string;
    static hsl(...sfs: RM[]): string;
    static hsla(...sfs: RM[]): string;
    static hueRotate(...sfs: RM[]): string;
    static inset(...sfs: RM[]): string;
    static invert(...sfs: RM[]): string;
    static linearGradient(...sfs: RM[]): string;
    static matrix(...sfs: RM[]): string;
    static matrix3d(...sfs: RM[]): string;
    static max(...sfs: RM[]): string;
    static min(...sfs: RM[]): string;
    static opacity(...sfs: RM[]): string;
    static path(...sfs: RM[]): string;
    static perspective(...sfs: RM[]): string;
    static polygon(...sfs: RM[]): string;
    static radialGradient(...sfs: RM[]): string;
    static repeatingConicFunction(...sfs: RM[]): string;
    static repeatingLinearGradient(...sfs: RM[]): string;
    static repeatingRadialGradient(...sfs: RM[]): string;
    static rgb(...sfs: RM[]): string;
    static rgba(...sfs: RM[]): string;
    static rotate(...sfs: RM[]): string;
    static rotate3d(x: number, y: number, z: number, angle: string): string;
    static rotateX(...sfs: RM[]): string;
    static rotateY(...sfs: RM[]): string;
    static rotateZ(...sfs: RM[]): string;
    static saturate(...sfs: RM[]): string;
    static scale(...sfs: RM[]): string;
    static scale3d(...sfs: RM[]): string;
    static scaleX(...sfs: RM[]): string;
    static scaleY(...sfs: RM[]): string;
    static scaleZ(...sfs: RM[]): string;
    static sepia(...sfs: RM[]): string;
    static skew(...sfs: RM[]): string;
    static skewX(...sfs: RM[]): string;
    static skewY(...sfs: RM[]): string;
    static translate(...sfs: RM[]): string;
    static translate3d(...sfs: RM[]): string;
    static translateX(...sfs: RM[]): string;
    static translateY(...sfs: RM[]): string;
    static translateZ(...sfs: RM[]): string;
    static url(...sfs: RM[]): string;
    static var(st: string, opt?: RM): string;
}
